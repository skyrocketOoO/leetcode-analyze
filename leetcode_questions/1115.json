{"Id": 1115, "Title": "Print FooBar Alternately", "Content": "<p>Suppose you are given the following code:</p>\n\n<pre>\nclass FooBar {\n  public void foo() {\n    for (int i = 0; i &lt; n; i++) {\n      print(&quot;foo&quot;);\n    }\n  }\n\n  public void bar() {\n    for (int i = 0; i &lt; n; i++) {\n      print(&quot;bar&quot;);\n    }\n  }\n}\n</pre>\n\n<p>The same instance of <code>FooBar</code> will be passed to two different threads:</p>\n\n<ul>\n\t<li>thread <code>A</code> will call <code>foo()</code>, while</li>\n\t<li>thread <code>B</code> will call <code>bar()</code>.</li>\n</ul>\n\n<p>Modify the given program to output <code>&quot;foobar&quot;</code> <code>n</code> times.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> &quot;foobar&quot;\n<strong>Explanation:</strong> There are two threads being fired asynchronously. One of them calls foo(), while the other calls bar().\n&quot;foobar&quot; is being output 1 time.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> &quot;foobarfoobar&quot;\n<strong>Explanation:</strong> &quot;foobar&quot; is being output 2 times.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n</ul>\n", "Topics": ["Concurrency"]}