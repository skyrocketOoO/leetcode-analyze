{"Id": 2850, "Title": "Minimum Moves to Spread Stones Over Grid", "Content": "<p>You are given a <strong>0-indexed</strong> 2D integer matrix <code>grid</code> of size <code>3 * 3</code>, representing the number of stones in each cell. The grid contains exactly <code>9</code> stones, and there can be <strong>multiple</strong> stones in a single cell.</p>\n\n<p>In one move, you can move a single stone from its current cell to any other cell if the two cells share a side.</p>\n\n<p>Return <em>the <strong>minimum number of moves</strong> required to place one stone in each cell</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2023/08/23/example1-3.svg\" style=\"width: 401px; height: 281px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,1,0],[1,1,1],[1,2,1]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> One possible sequence of moves to place one stone in each cell is: \n1- Move one stone from cell (2,1) to cell (2,2).\n2- Move one stone from cell (2,2) to cell (1,2).\n3- Move one stone from cell (1,2) to cell (0,2).\nIn total, it takes 3 moves to place one stone in each cell of the grid.\nIt can be shown that 3 is the minimum number of moves required to place one stone in each cell.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2023/08/23/example2-2.svg\" style=\"width: 401px; height: 281px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,3,0],[1,0,0],[1,0,3]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> One possible sequence of moves to place one stone in each cell is:\n1- Move one stone from cell (0,1) to cell (0,2).\n2- Move one stone from cell (0,1) to cell (1,1).\n3- Move one stone from cell (2,2) to cell (1,2).\n4- Move one stone from cell (2,2) to cell (2,1).\nIn total, it takes 4 moves to place one stone in each cell of the grid.\nIt can be shown that 4 is the minimum number of moves required to place one stone in each cell.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>grid.length == grid[i].length == 3</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 9</code></li>\n\t<li>Sum of <code>grid</code> is equal to <code>9</code>.</li>\n</ul>\n", "Topics": ["Array", "Dynamic Programming", "Breadth-First Search", "Matrix"]}